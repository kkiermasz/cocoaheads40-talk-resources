sil_stage canonical

import Builtin
import Swift
import SwiftShims

protocol Conference {
  var numberOfAttendees: Int { get }
}

class CocoaHeads : Conference {
  @_hasStorage @_hasInitialValue final let numberOfAttendees: Int { get }
  @objc deinit
  init()
}

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// variable initialization expression of CocoaHeads.numberOfAttendees
sil hidden [transparent] @$s4main10CocoaHeadsC17numberOfAttendeesSivpfi : $@convention(thin) () -> Int {
bb0:
  %0 = integer_literal $Builtin.Int64, 0          // user: %1
  %1 = struct $Int (%0 : $Builtin.Int64)          // user: %2
  return %1 : $Int                                // id: %2
} // end sil function '$s4main10CocoaHeadsC17numberOfAttendeesSivpfi'

// CocoaHeads.numberOfAttendees.getter
sil hidden [transparent] @$s4main10CocoaHeadsC17numberOfAttendeesSivg : $@convention(method) (@guaranteed CocoaHeads) -> Int {
// %0 "self"                                      // user: %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = integer_literal $Builtin.Int64, 0          // user: %3
  %3 = struct $Int (%2 : $Builtin.Int64)          // user: %4
  return %3 : $Int                                // id: %4
} // end sil function '$s4main10CocoaHeadsC17numberOfAttendeesSivg'

// CocoaHeads.deinit
sil hidden @$s4main10CocoaHeadsCfd : $@convention(method) (@guaranteed CocoaHeads) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = unchecked_ref_cast %0 : $CocoaHeads to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4main10CocoaHeadsCfd'

// CocoaHeads.__deallocating_deinit
sil hidden @$s4main10CocoaHeadsCfD : $@convention(method) (@owned CocoaHeads) -> () {
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %2
  dealloc_ref %0 : $CocoaHeads                    // id: %3
  %4 = tuple ()                                   // user: %5
  return %4 : $()                                 // id: %5
} // end sil function '$s4main10CocoaHeadsCfD'

// CocoaHeads.__allocating_init()
sil hidden [exact_self_class] @$s4main10CocoaHeadsCACycfC : $@convention(method) (@thick CocoaHeads.Type) -> @owned CocoaHeads {
// %0 "$metatype"
bb0(%0 : $@thick CocoaHeads.Type):
  %1 = alloc_ref $CocoaHeads                      // users: %7, %3, %2
  debug_value %1 : $CocoaHeads, let, name "self", argno 1, implicit // id: %2
  %3 = ref_element_addr %1 : $CocoaHeads, #CocoaHeads.numberOfAttendees // user: %6
  %4 = integer_literal $Builtin.Int64, 0          // user: %5
  %5 = struct $Int (%4 : $Builtin.Int64)          // user: %6
  store %5 to %3 : $*Int                          // id: %6
  return %1 : $CocoaHeads                         // id: %7
} // end sil function '$s4main10CocoaHeadsCACycfC'

// CocoaHeads.init()
sil hidden @$s4main10CocoaHeadsCACycfc : $@convention(method) (@owned CocoaHeads) -> @owned CocoaHeads {
// %0 "self"                                      // users: %2, %6, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = ref_element_addr %0 : $CocoaHeads, #CocoaHeads.numberOfAttendees // user: %5
  %3 = integer_literal $Builtin.Int64, 0          // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  store %4 to %2 : $*Int                          // id: %5
  return %0 : $CocoaHeads                         // id: %6
} // end sil function '$s4main10CocoaHeadsCACycfc'

// protocol witness for Conference.numberOfAttendees.getter in conformance CocoaHeads
sil private [transparent] [thunk] @$s4main10CocoaHeadsCAA10ConferenceA2aDP17numberOfAttendeesSivgTW : $@convention(witness_method: Conference) (@in_guaranteed CocoaHeads) -> Int {
bb0(%0 : $*CocoaHeads):
  %1 = integer_literal $Builtin.Int64, 0          // user: %2
  %2 = struct $Int (%1 : $Builtin.Int64)          // user: %3
  return %2 : $Int                                // id: %3
} // end sil function '$s4main10CocoaHeadsCAA10ConferenceA2aDP17numberOfAttendeesSivgTW'

sil_vtable CocoaHeads {
  #CocoaHeads.init!allocator: (CocoaHeads.Type) -> () -> CocoaHeads : @$s4main10CocoaHeadsCACycfC	// CocoaHeads.__allocating_init()
  #CocoaHeads.deinit!deallocator: @$s4main10CocoaHeadsCfD	// CocoaHeads.__deallocating_deinit
}

sil_witness_table hidden CocoaHeads: Conference module main {
  method #Conference.numberOfAttendees!getter: <Self where Self : Conference> (Self) -> () -> Int : @$s4main10CocoaHeadsCAA10ConferenceA2aDP17numberOfAttendeesSivgTW	// protocol witness for Conference.numberOfAttendees.getter in conformance CocoaHeads
}



// Mappings from '#fileID' to '#filePath':
//   'main/class-protocol-conformance-requirements.swift' => 'src/class-protocol-conformance-requirements.swift'


