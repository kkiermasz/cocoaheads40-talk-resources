sil_stage canonical

import Builtin
import Swift
import SwiftShims

final class CocoaHeads {
  final func organise()
  @objc deinit
  init()
}

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// CocoaHeads.organise()
sil hidden @$s4main10CocoaHeadsC8organiseyyF : $@convention(method) (@guaranteed CocoaHeads) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4main10CocoaHeadsC8organiseyyF'

// CocoaHeads.deinit
sil hidden @$s4main10CocoaHeadsCfd : $@convention(method) (@guaranteed CocoaHeads) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = unchecked_ref_cast %0 : $CocoaHeads to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4main10CocoaHeadsCfd'

// CocoaHeads.__deallocating_deinit
sil hidden @$s4main10CocoaHeadsCfD : $@convention(method) (@owned CocoaHeads) -> () {
// %0 "self"                                      // users: %3, %2, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %2
  dealloc_ref %0 : $CocoaHeads                    // id: %3
  %4 = tuple ()                                   // user: %5
  return %4 : $()                                 // id: %5
} // end sil function '$s4main10CocoaHeadsCfD'

// CocoaHeads.__allocating_init()
sil hidden [exact_self_class] @$s4main10CocoaHeadsCACycfC : $@convention(method) (@thick CocoaHeads.Type) -> @owned CocoaHeads {
// %0 "$metatype"
bb0(%0 : $@thick CocoaHeads.Type):
  %1 = alloc_ref $CocoaHeads                      // users: %3, %2
  debug_value %1 : $CocoaHeads, let, name "self", argno 1, implicit // id: %2
  return %1 : $CocoaHeads                         // id: %3
} // end sil function '$s4main10CocoaHeadsCACycfC'

// CocoaHeads.init()
sil hidden @$s4main10CocoaHeadsCACycfc : $@convention(method) (@owned CocoaHeads) -> @owned CocoaHeads {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  return %0 : $CocoaHeads                         // id: %2
} // end sil function '$s4main10CocoaHeadsCACycfc'

sil_vtable CocoaHeads {
  #CocoaHeads.init!allocator: (CocoaHeads.Type) -> () -> CocoaHeads : @$s4main10CocoaHeadsCACycfC	// CocoaHeads.__allocating_init()
  #CocoaHeads.deinit!deallocator: @$s4main10CocoaHeadsCfD	// CocoaHeads.__deallocating_deinit
}



// Mappings from '#fileID' to '#filePath':
//   'main/final-class.swift' => 'src/final-class.swift'


