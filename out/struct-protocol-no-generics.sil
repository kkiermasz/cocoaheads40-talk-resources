sil_stage canonical

import Builtin
import Swift
import SwiftShims

protocol Conference {
  func organise()
}

struct CocoaHeads : Conference {
  func organise()
  init()
}

@_hasStorage @_hasInitialValue let cocoaHeads: CocoaHeads { get }

func organise(_ conference: Conference)

// cocoaHeads
sil_global hidden [let] @$s4main10cocoaHeadsAA05CocoaC0Vvp : $CocoaHeads

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  alloc_global @$s4main10cocoaHeadsAA05CocoaC0Vvp // id: %2
  %3 = global_addr @$s4main10cocoaHeadsAA05CocoaC0Vvp : $*CocoaHeads // user: %5
  %4 = struct $CocoaHeads ()                      // user: %5
  store %4 to %3 : $*CocoaHeads                   // id: %5
  %6 = integer_literal $Builtin.Int32, 0          // user: %7
  %7 = struct $Int32 (%6 : $Builtin.Int32)        // user: %8
  return %7 : $Int32                              // id: %8
} // end sil function 'main'

// CocoaHeads.organise()
sil hidden @$s4main10CocoaHeadsV8organiseyyF : $@convention(method) (CocoaHeads) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $CocoaHeads):
  debug_value %0 : $CocoaHeads, let, name "self", argno 1, implicit // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4main10CocoaHeadsV8organiseyyF'

// CocoaHeads.init()
sil hidden @$s4main10CocoaHeadsVACycfC : $@convention(method) (@thin CocoaHeads.Type) -> CocoaHeads {
// %0 "$metatype"
bb0(%0 : $@thin CocoaHeads.Type):
  %1 = struct $CocoaHeads ()                      // user: %2
  return %1 : $CocoaHeads                         // id: %2
} // end sil function '$s4main10CocoaHeadsVACycfC'

// protocol witness for Conference.organise() in conformance CocoaHeads
sil private [transparent] [thunk] @$s4main10CocoaHeadsVAA10ConferenceA2aDP8organiseyyFTW : $@convention(witness_method: Conference) (@in_guaranteed CocoaHeads) -> () {
bb0(%0 : $*CocoaHeads):
  %1 = tuple ()                                   // user: %2
  return %1 : $()                                 // id: %2
} // end sil function '$s4main10CocoaHeadsVAA10ConferenceA2aDP8organiseyyFTW'

// organise(_:)
sil hidden [signature_optimized_thunk] [always_inline] @$s4main8organiseyyAA10Conference_pF : $@convention(thin) (@in_guaranteed Conference) -> () {
// %0 "conference"                                // user: %2
bb0(%0 : $*Conference):
  // function_ref specialized organise(_:)
  %1 = function_ref @$s4main8organiseyyAA10Conference_pFTf4e_n : $@convention(thin) <τ_0_0 where τ_0_0 : Conference> (@in_guaranteed τ_0_0) -> () // user: %3
  %2 = open_existential_addr immutable_access %0 : $*Conference to $*@opened("C0410C8C-6377-11ED-82ED-96B3AA0BE17C") Conference // users: %3, %3
  %3 = apply %1<@opened("C0410C8C-6377-11ED-82ED-96B3AA0BE17C") Conference>(%2) : $@convention(thin) <τ_0_0 where τ_0_0 : Conference> (@in_guaranteed τ_0_0) -> () // type-defs: %2; user: %4
  return %3 : $()                                 // id: %4
} // end sil function '$s4main8organiseyyAA10Conference_pF'

// specialized organise(_:)
sil shared @$s4main8organiseyyAA10Conference_pFTf4e_n : $@convention(thin) <τ_0_0 where τ_0_0 : Conference> (@in_guaranteed τ_0_0) -> () {
// %0 "conference"                                // user: %2
bb0(%0 : $*τ_0_0):
  %1 = witness_method $τ_0_0, #Conference.organise : <Self where Self : Conference> (Self) -> () -> () : $@convention(witness_method: Conference) <τ_0_0 where τ_0_0 : Conference> (@in_guaranteed τ_0_0) -> () // user: %2
  %2 = apply %1<τ_0_0>(%0) : $@convention(witness_method: Conference) <τ_0_0 where τ_0_0 : Conference> (@in_guaranteed τ_0_0) -> ()
  %3 = tuple ()                                   // user: %4
  return %3 : $()                                 // id: %4
} // end sil function '$s4main8organiseyyAA10Conference_pFTf4e_n'

sil_witness_table hidden CocoaHeads: Conference module main {
  method #Conference.organise: <Self where Self : Conference> (Self) -> () -> () : @$s4main10CocoaHeadsVAA10ConferenceA2aDP8organiseyyFTW	// protocol witness for Conference.organise() in conformance CocoaHeads
}



// Mappings from '#fileID' to '#filePath':
//   'main/struct-protocol-no-generics.swift' => 'src/struct-protocol-no-generics.swift'


